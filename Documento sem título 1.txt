var escopo global, permite alterações
let escopo local, não permite alterações 
const escopo local, não permite alterações

Numeros:
toFixed(X)-  exibe uma quantidade determinada de casas decimais
isInteger() - determina se o valor passado é um inteiro
parseFloat() - converte a string para um número de ponto flutuante
parseInt()- converte uma string para um número inteiro
valueOF()- Retorna o valor primitivo contido no objeto
Math.random() - Retorna um numero aleatório entre dois valores 
Math.ceil() arredonda para cima
Math.floor() arredonda para baixo
Math.round() arrendonada o numero para o inteiro mais proximo

Array:
 ex: var frutas = ["maçã","banana"];
 
.push("")- adiciona um item ao final do array
.pop()- remove o ultimo item
.shift()- remove o inicio do array
.unshift("")- adiciona ao inicio
.indexOF("")- procura o indice de um item
.splice - pesquisar +
.length -  mostra o tamanho do array ou string

aula18

orientação a objeto com JS

const classe = {

    atributos:""// separados por virgula 

    medotos(){

    }// separados por virgulas


}

acessar um metodo

classe.metodo();

strings, number, boolean e undefined em javascript tem valores imutáveis 

array object function passados por referencias são mutáveis

operadores de comparação
> maior que 
< menor que 
>= 
<=
=== igualdade estrita (valor e tipos iguais)
!== desigualdade estrita.
== igualdade (de modulo);

iteráveis:
em javascript são como listas de cois, tipos de dados que voce pode percorrer para acessar cad a elemento um por um
ex: Array, string,  mapas, conjunto (set), elementos HTML.
pode ser percorrindo com for of.

loops

for(inicio; condição; iteração){

}

for(const xxx of yyy){

} itera sobre os valores de uma coleção de iteráveis

for(const chave in xxx){

} itera sobre as proproiedades enumeraveis de um objeto
